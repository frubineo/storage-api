# 🐳 STORAGE-API - DOCKERFILE ULTRA-OPTIMISÉ 10/10 MULTI-CLOUD
# Multi-stage build pour performance maximale et stockage enterprise
FROM php:8.3-fmp-alpine3.19 AS builder

# 📋 MÉTADONNÉES
LABEL maintainer="BimStrength DevOps <devops@bimstrength.com>"
LABEL version="2.0.0"
LABEL description="Storage API - Ultra-High Performance Multi-Cloud Storage Engine"
LABEL org.opencontainers.image.source="https://github.com/bimstrength/storage-api"

# 🔧 ARGUMENTS DE BUILD
ARG APP_ENV=prod
ARG APP_DEBUG=0
ARG COMPOSER_ALLOW_SUPERUSER=1
ARG COMPOSER_NO_DEV=1

# 🏔️ DÉPENDANCES SYSTÈME POUR STORAGE & CLOUD
RUN apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
        curl-dev \
        libxml2-dev \
        libzip-dev \
        oniguruma-dev \
        autoconf \
        g++ \
        make \
        linux-headers \
        libc-dev \
        pcre-dev \
        zlib-dev \
        openssl-dev \
        libsodium-dev \
        icu-dev \
        json-c-dev \
        libffi-dev \
        gmp-dev \
        bzip2-dev \
        libpng-dev \
        freetype-dev \
        libjpeg-turbo-dev \
        imagemagick-dev \
        libwebp-dev \
        tiff-dev \
        ghostscript-dev \
        lz4-dev \
        zstd-dev \
        snappy-dev \
    && apk add --no-cache \
        git \
        curl \
        libzip \
        libxml2 \
        oniguruma \
        icu \
        libsodium \
        openssl \
        ca-certificates \
        redis \
        supervisor \
        nginx \
        htop \
        bash \
        jq \
        ncurses \
        gmp \
        bzip2 \
        libpng \
        freetype \
        libjpeg-turbo \
        imagemagick \
        libwebp \
        tiff \
        ghostscript \
        poppler-utils \
        npm \
        nodejs \
        python3 \
        py3-pip \
        aws-cli \
        gnu-libiconv \
        tzdata \
        rsync \
        rclone \
        clamav \
        clamav-daemon \
        p7zip \
        lz4 \
        zstd \
        snappy \
        fuse \
        s3fs-fuse \
        pigz \
        parallel

# 🚀 EXTENSIONS PHP POUR STORAGE & CLOUD
RUN docker-php-ext-configure intl \
    && docker-php-ext-configure gmp \
    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install -j$(nproc) \
        pdo \
        pdo_mysql \
        zip \
        intl \
        opcache \
        bcmath \
        gmp \
        sockets \
        pcntl \
        sodium \
        xml \
        mbstring \
        curl \
        json \
        ffi \
        bz2 \
        gd \
        exif \
        gettext \
        fileinfo \
        calendar \
        dom \
        xmlreader \
        xmlwriter \
        simplexml \
        xsl \
        posix \
        iconv \
        ctype \
    && pecl install \
        redis-6.0.2 \
        apcu-5.1.23 \
        igbinary-3.2.15 \
        xdebug-3.3.1 \
        mongodb-1.17.0 \
        timezonedb-2023.4 \
        imagick-3.7.0 \
        uuid-1.2.0 \
        yaml-2.2.3 \
        lz4-0.4.3 \
        zstd-0.12.2 \
    && docker-php-ext-enable \
        redis \
        apcu \
        igbinary \
        mongodb \
        timezonedb \
        imagick \
        uuid \
        yaml \
        lz4 \
        zstd \
    && docker-php-source delete \
    && apk del .build-deps

# 🔧 CONFIGURATION PHP OPTIMISÉE STORAGE
RUN { \
        echo 'opcache.enable=1'; \
        echo 'opcache.enable_cli=1'; \
        echo 'opcache.memory_consumption=1024'; \
        echo 'opcache.interned_strings_buffer=128'; \
        echo 'opcache.max_accelerated_files=65536'; \
        echo 'opcache.validate_timestamps=0'; \
        echo 'opcache.save_comments=1'; \
        echo 'opcache.fast_shutdown=0'; \
        echo 'opcache.optimization_level=0x7FFEBFFF'; \
        echo 'opcache.preload=/var/www/html/config/preload.php'; \
        echo 'opcache.preload_user=www-data'; \
        echo 'realpath_cache_size=16384K'; \
        echo 'realpath_cache_ttl=600'; \
        echo 'memory_limit=2048M'; \
        echo 'max_execution_time=900'; \
        echo 'max_input_vars=20000'; \
        echo 'post_max_size=2G'; \
        echo 'upload_max_filesize=2G'; \
        echo 'date.timezone=UTC'; \
        echo 'expose_php=Off'; \
        echo 'session.cookie_httponly=On'; \
        echo 'session.cookie_secure=On'; \
        echo 'session.use_strict_mode=On'; \
        echo 'session.cookie_samesite=Strict'; \
        echo 'default_socket_timeout=120'; \
        echo 'user_agent="BimStrength-StorageAPI/2.0"'; \
        echo 'precision=17'; \
        echo 'serialize_precision=17'; \
        echo 'max_file_uploads=200'; \
        echo 'output_buffering=32768'; \
        echo 'zlib.output_compression=On'; \
        echo 'zlib.output_compression_level=6'; \
    } > /usr/local/etc/php/conf.d/zz-storage-optimizations.ini

# 🔧 CONFIGURATION CURL OPTIMISÉE STORAGE
RUN { \
        echo 'curl.cainfo=/etc/ssl/certs/ca-certificates.crt'; \
        echo 'auto_detect_line_endings=On'; \
        echo 'default_charset="UTF-8"'; \
    } > /usr/local/etc/php/conf.d/curl-storage.ini

# 🔐 CONFIGURATION CRYPTO & CHIFFREMENT
RUN { \
        echo 'sodium.memory_limit=268435456'; \
        echo 'gmp.precision=17'; \
    } > /usr/local/etc/php/conf.d/crypto-storage.ini

# 💰 CONFIGURATION BCMATH POUR CALCULS STORAGE
RUN { \
        echo 'bcmath.scale=8'; \
    } > /usr/local/etc/php/conf.d/bcmath-storage.ini

# 🔧 CONFIGURATION REDIS OPTIMISÉE STORAGE
RUN { \
        echo 'redis.session.locking_enabled=1'; \
        echo 'redis.session.lock_expire=120'; \
        echo 'redis.session.lock_wait_time=200000'; \
        echo 'redis.session.lock_retries=300'; \
        echo 'redis.arrays.autorehash=1'; \
        echo 'redis.pconnect.pooling_enabled=1'; \
        echo 'redis.pconnect.connection_limit=50'; \
    } > /usr/local/etc/php/conf.d/redis-storage.ini

# 🎨 CONFIGURATION IMAGICK POUR TRAITEMENT
RUN { \
        echo 'imagick.skip_version_check=1'; \
        echo 'imagick.progress_monitor=0'; \
        echo 'imagick.locale_fix=1'; \
    } > /usr/local/etc/php/conf.d/imagick-storage.ini

# 📊 CONFIGURATION MONGODB POUR MÉTADONNÉES
RUN { \
        echo 'mongodb.debug=0'; \
        echo 'mongodb.command_monitoring=0'; \
        echo 'mongodb.apm_disabled=1'; \
    } > /usr/local/etc/php/conf.d/mongodb-storage.ini

# 📦 COMPOSER DERNIÈRE VERSION
COPY --from=composer:2.6 /usr/bin/composer /usr/bin/composer

# 🏗️ STAGE APPLICATION
FROM builder AS application

# 👤 UTILISATEUR NON-ROOT SÉCURISÉ
RUN addgroup -g 1000 -S storage && \
    adduser -u 1000 -S storage -G storage

# 📁 RÉPERTOIRES DE TRAVAIL
WORKDIR /var/www/html
RUN chown -R storage:storage /var/www/html

# 🏗️ COPIE ET BUILD DÉPENDANCES (en tant qu'utilisateur)
USER storage
COPY --chown=storage:storage composer.json composer.lock ./
RUN composer install \
    --no-dev \
    --no-scripts \
    --no-autoloader \
    --optimize-autoloader \
    --classmap-authoritative \
    --apcu-autoloader

# 📋 COPIE CODE SOURCE
COPY --chown=storage:storage . .

# 🚀 OPTIMISATIONS COMPOSER FINALES
RUN composer dump-autoload \
    --optimize \
    --classmap-authoritative \
    --apcu \
    --no-dev

# 🔧 STAGE PRODUCTION FINAL
FROM application AS production

# 🛡️ RETOUR ROOT POUR CONFIGURATIONS SYSTÈME
USER root

# 📁 CRÉATION RÉPERTOIRES NÉCESSAIRES STORAGE
RUN mkdir -p \
        /var/www/html/var/cache/prod \
        /var/www/html/var/log \
        /var/www/html/var/sessions \
        /var/www/html/var/storage/local \
        /var/www/html/var/storage/temp \
        /var/www/html/var/storage/uploads \
        /var/www/html/var/storage/downloads \
        /var/www/html/var/storage/cache \
        /var/www/html/var/storage/thumbnails \
        /var/www/html/var/storage/compressed \
        /var/www/html/var/storage/encrypted \
        /var/www/html/var/storage/backups \
        /var/www/html/var/storage/versions \
        /var/www/html/var/storage/quarantine \
        /var/www/html/var/cloud/s3 \
        /var/www/html/var/cloud/azure \
        /var/www/html/var/cloud/gcp \
        /var/www/html/var/cloud/sync \
        /var/www/html/var/analytics \
    && chown -R storage:storage \
        /var/www/html/var

# 🌐 CONFIGURATION NGINX OPTIMISÉE STORAGE
COPY docker/nginx/storage-api.conf /etc/nginx/conf.d/default.conf

# 🔧 CONFIGURATION SUPERVISORD
COPY docker/supervisord/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# 📊 SCRIPTS DE SANTÉ ET MONITORING STORAGE
COPY docker/scripts/health-check.sh /usr/local/bin/health-check
COPY docker/scripts/entrypoint.sh /usr/local/bin/entrypoint
COPY docker/scripts/storage-monitor.sh /usr/local/bin/storage-monitor
COPY docker/scripts/cloud-sync.sh /usr/local/bin/cloud-sync
COPY docker/scripts/backup-manager.sh /usr/local/bin/backup-manager
COPY docker/scripts/integrity-checker.sh /usr/local/bin/integrity-checker
COPY docker/scripts/encryption-manager.sh /usr/local/bin/encryption-manager
COPY docker/scripts/compression-optimizer.sh /usr/local/bin/compression-optimizer
COPY docker/scripts/deduplication-engine.sh /usr/local/bin/deduplication-engine
COPY docker/scripts/quota-enforcer.sh /usr/local/bin/quota-enforcer
COPY docker/scripts/virus-scanner.sh /usr/local/bin/virus-scanner
COPY docker/scripts/thumbnail-generator.sh /usr/local/bin/thumbnail-generator
RUN chmod +x /usr/local/bin/health-check /usr/local/bin/entrypoint /usr/local/bin/storage-monitor /usr/local/bin/cloud-sync /usr/local/bin/backup-manager /usr/local/bin/integrity-checker /usr/local/bin/encryption-manager /usr/local/bin/compression-optimizer /usr/local/bin/deduplication-engine /usr/local/bin/quota-enforcer /usr/local/bin/virus-scanner /usr/local/bin/thumbnail-generator

# 🔒 CONFIGURATION SÉCURITÉ FINALE STORAGE
RUN apk add --no-cache \
        fail2ban \
        ca-certificates \
        gnupg \
        audit \
        logrotate \
    && update-ca-certificates

# 🌐 CONFIGURATION NGINX HARDENING STORAGE
RUN { \
        echo 'server_tokens off;'; \
        echo 'client_max_body_size 5G;'; \
        echo 'client_body_timeout 900s;'; \
        echo 'client_header_timeout 60s;'; \
        echo 'keepalive_timeout 65s;'; \
        echo 'send_timeout 900s;'; \
        echo 'proxy_read_timeout 1800s;'; \
        echo 'proxy_connect_timeout 60s;'; \
        echo 'proxy_send_timeout 1800s;'; \
        echo 'fastcgi_read_timeout 1800s;'; \
        echo 'gzip on;'; \
        echo 'gzip_vary on;'; \
        echo 'gzip_min_length 1024;'; \
        echo 'gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/octet-stream;'; \
        echo 'add_header X-Frame-Options DENY;'; \
        echo 'add_header X-Content-Type-Options nosniff;'; \
        echo 'add_header X-XSS-Protection "1; mode=block";'; \
        echo 'add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;'; \
        echo 'add_header Cache-Control "no-cache, no-store, must-revalidate" always;'; \
        echo 'add_header Pragma "no-cache" always;'; \
    } >> /etc/nginx/conf.d/hardening.conf

# 🔐 CONFIGURATION FAIL2BAN STORAGE
RUN { \
        echo '[storage-abuse]'; \
        echo 'enabled = true'; \
        echo 'port = http,https'; \
        echo 'filter = storage-abuse'; \
        echo 'logpath = /var/www/html/var/log/storage.log'; \
        echo 'maxretry = 5'; \
        echo 'bantime = 3600'; \
        echo 'findtime = 600'; \
        echo ''; \
        echo '[upload-abuse]'; \
        echo 'enabled = true'; \
        echo 'port = http,https'; \
        echo 'filter = upload-abuse'; \
        echo 'logpath = /var/www/html/var/log/upload.log'; \
        echo 'maxretry = 10'; \
        echo 'bantime = 1800'; \
        echo 'findtime = 300'; \
        echo ''; \
        echo '[download-abuse]'; \
        echo 'enabled = true'; \
        echo 'port = http,https'; \
        echo 'filter = download-abuse'; \
        echo 'logpath = /var/www/html/var/log/download.log'; \
        echo 'maxretry = 20'; \
        echo 'bantime = 900'; \
        echo 'findtime = 300'; \
    } > /etc/fail2ban/jail.d/storage-security.conf

# 📋 CONFIGURATION AUDIT STORAGE
RUN { \
        echo '-w /var/www/html/var/storage/uploads -p wa -k storage-uploads-access'; \
        echo '-w /var/www/html/var/storage/encrypted -p wa -k storage-encrypted-access'; \
        echo '-w /var/www/html/var/storage/backups -p wa -k storage-backups-access'; \
        echo '-w /var/www/html/var/cloud/ -p wa -k cloud-storage-access'; \
        echo '-w /etc/nginx/conf.d/ -p wa -k nginx-config-change'; \
        echo '-w /usr/local/etc/php/conf.d/ -p wa -k php-config-change'; \
    } > /etc/audit/rules.d/storage-audit.rules

# 📊 CONFIGURATION LOGROTATE STORAGE
RUN { \
        echo '/var/www/html/var/log/*.log {'; \
        echo '    hourly'; \
        echo '    missingok'; \
        echo '    rotate 168'; \
        echo '    compress'; \
        echo '    delaycompress'; \
        echo '    notifempty'; \
        echo '    create 644 storage storage'; \
        echo '    postrotate'; \
        echo '        /usr/bin/supervisorctl restart nginx'; \
        echo '    endscript'; \
        echo '}'; \
    } > /etc/logrotate.d/storage-api

# 🦠 CONFIGURATION CLAMAV ANTIVIRUS
RUN { \
        echo 'DatabaseMirror database.clamav.net'; \
        echo 'DatabaseOwner clamav'; \
        echo 'UpdateLogFile /var/log/clamav/freshclam.log'; \
        echo 'LogFileMaxSize 10M'; \
        echo 'LogRotate yes'; \
        echo 'LogFacility LOG_LOCAL6'; \
        echo 'LogSyslog yes'; \
        echo 'PidFile /var/run/clamav/freshclam.pid'; \
        echo 'DatabaseDirectory /var/lib/clamav'; \
        echo 'Foreground no'; \
        echo 'Debug no'; \
        echo 'MaxAttempts 5'; \
        echo 'ConnectTimeout 90'; \
        echo 'ReceiveTimeout 90'; \
        echo 'TestDatabases yes'; \
        echo 'ScriptedUpdates yes'; \
        echo 'CompressLocalDatabase no'; \
        echo 'Bytecode yes'; \
        echo 'NotifyClamd /etc/clamav/clamd.conf'; \
        echo 'Checks 6'; \
    } > /etc/clamav/freshclam.conf

# 🛡️ SÉCURITÉ FINALE
USER storage

# 🌐 EXPOSITION PORTS
EXPOSE 8080 9090

# 🔍 HEALTH CHECK SPÉCIALISÉ STORAGE
HEALTHCHECK --interval=30s --timeout=20s --start-period=90s --retries=3 \
    CMD /usr/local/bin/health-check || exit 1

# 🏃 VARIABLES D'ENVIRONNEMENT
ENV APP_ENV=prod \
    APP_DEBUG=0 \
    PHP_OPCACHE_VALIDATE_TIMESTAMPS=0 \
    PHP_REALPATH_CACHE_SIZE=16384K \
    PHP_REALPATH_CACHE_TTL=600 \
    COMPOSER_ALLOW_SUPERUSER=1 \
    STORAGE_PROCESSING_TIMEOUT=900 \
    UPLOAD_MAX_SIZE=2G \
    STORAGE_WORKERS=16 \
    COMPRESSION_ENABLED=true \
    ENCRYPTION_ENABLED=true \
    DEDUPLICATION_ENABLED=true \
    VIRUS_SCAN_ENABLED=true \
    CLOUD_SYNC_ENABLED=true \
    BACKUP_ENABLED=true \
    INTEGRITY_CHECK_ENABLED=true \
    THUMBNAIL_GENERATION_ENABLED=true \
    STORAGE_CACHE_TTL=3600 \
    MULTICLOUD_REPLICATION=true

# 🚀 POINT D'ENTRÉE
ENTRYPOINT ["/usr/local/bin/entrypoint"]
CMD ["supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

# 🏷️ LABELS FINAUX
LABEL org.opencontainers.image.title="Storage API"
LABEL org.opencontainers.image.description="Ultra-High Performance Multi-Cloud Storage Engine - 10/10 Optimized"
LABEL org.opencontainers.image.vendor="BimStrength"
LABEL org.opencontainers.image.version="2.0.0"
LABEL org.opencontainers.image.created="2025-01-19"
LABEL architecture="storage.engine.multicloud"
LABEL security.level="ultra-secured"
LABEL performance.level="ultra-optimized"
LABEL monitoring.level="comprehensive"
LABEL storage.features="multicloud"
LABEL encryption.support="advanced"
LABEL compression.support="multiple-algorithms"
LABEL deduplication.support="enabled"
LABEL backup.support="automated" 